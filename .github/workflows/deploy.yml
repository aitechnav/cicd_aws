name: Deploy App

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/pipeline
          role-session-name: GitHubActions
          aws-region: ${{ vars.AWS_REGION }}
          # audience: sts.amazonaws.com   # optional (default)

      - name: Set Image Tag
        run: echo "IMAGE_TAG=$(date +%Y%m%d%H%M%S)" >> "$GITHUB_ENV"

      # Optional: create ECR repo if it doesn't exist
      - name: Ensure ECR repository exists (optional)
        run: |
          aws ecr describe-repositories --repository-names ${{ vars.ECR_REPOSITORY }} >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name ${{ vars.ECR_REPOSITORY }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} \
            | docker login --username AWS --password-stdin \
              ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image to ECR
        env:
          REGISTRY: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
          REPO: ${{ vars.ECR_REPOSITORY }}
          TAG: ${{ env.IMAGE_TAG }}
        run: |
          docker build -t flask-app:latest .
          docker tag flask-app:latest $REGISTRY/$REPO:$TAG
          docker push $REGISTRY/$REPO:$TAG

      - name: Deploy Image to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ vars.LAMBDA_FUNCTION_NAME }} \
            --image-uri ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          aws lambda wait function-updated --function-name ${{ vars.LAMBDA_FUNCTION_NAME }}

      - name: Enable Lambda Function URL (idempotent)
        run: |
          aws lambda create-function-url-config \
            --function-name ${{
